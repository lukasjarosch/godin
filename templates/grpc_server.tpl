// Code generated by Godin v{{ .Godin.Version }}; DO NOT EDIT.

package grpc

import (
    "context"
    "errors"

	kitGrpc "github.com/go-kit/kit/transport/grpc"

    service "{{ .Service.Module }}"
    pb "{{ .Protobuf.Package }}"
)

type grpcServer struct {
{{ range .Service.Methods }}
    {{ .Name }}Handler kitGrpc.Handler
{{ end }}
}

func NewServer(endpoints endpoint.Set, logger log.Logger) pb.{{ .Protobuf.Service }}Server {
    // TODO: configurable ServerOptions via godin.json
	options := []kitGrpc.ServerOption{}

    return &grpcServer{
    {{ range .Service.Methods }}
    {{ .Name }}Handler: kitGrpc.NewServer(
        endpoints.{{ .Name }}Endpoint,
        Decode{{ .Request }},
        Encode{{ .Response }},
        append(options)...,
    ),
    {{ end }}
    }
}

{{ range .Service.Methods }}
func (s *grpcServer) {{ .Name }}(
    _, resp, err := s.{{ .Name }}Handler.ServeGRPC(ctx, req)
{{ end }}